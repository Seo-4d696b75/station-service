daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server 127.0.0.1:8000;
	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name _;
		keepalive_timeout 5;

    
    location /static {
      root /static;
      index index.html ;
	    proxy_cookie_path / "/; Secure; SameSite=None";
	    try_files $uri $uri/  /index.html;
    }

    location /api {
	  # preflight
	    if ($request_method = 'OPTIONS' ){
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods 'POST, GET';
        add_header Access-Control-Allow-Headers 'Origin, Authorization, Accept, Content-Type';
		    add_header Access-Control-Max-Age 3600;
		    add_header Content-Type 'text/plain charset=UTF-8';
		    add_header Content-Length 0;
		    return 204;
	    }

      proxy_pass http://app_server;
      add_header Access-Control-Allow-Origin '*' always;
		}
	}
}
